#! (C) Copyright 2022- ECMWF.
#! (C) Copyright 2022- Meteo-France.
#!
#! This software is licensed under the terms of the Apache Licence Version 2.0
#! which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
#! In applying this licence, ECMWF does not waive the privileges and immunities
#! granted to it by virtue of its status as an intergovernmental organisation
#! nor does it submit to any jurisdiction.

MODULE FIELD_${RANK}$${SUFF}$_GANG_MODULE

#:set fieldTypeList = fieldType.getFieldTypeList (ranks=[RANK], kinds=['JP' + str (SUFF)])
#:set ft = fieldTypeList[0]

#:if ft.rank > 2

USE FIELD_BASIC_MODULE
USE ${ft.name}$_MODULE
USE DEV_ALLOC_MODULE

${fieldType.useParkind1 ()}$

IMPLICIT NONE

PRIVATE

#:set ftn = ft.name

#:for type in ['WRAPPER', 'OWNER']

TYPE, EXTENDS (${ftn}$_${type}$) :: ${ftn}$_GANG_${type}$
CONTAINS
  PROCEDURE :: INIT => ${ftn}$_GANG_${type}$_INIT
  PROCEDURE :: FINAL => ${ftn}$_GANG_${type}$_FINAL
  PROCEDURE :: CREATE_DEVICE_DATA => ${ftn}$_GANG_${type}$_CREATE_DEVICE_DATA
  PROCEDURE :: DELETE_DEVICE_DATA => ${ftn}$_GANG_${type}$_DELETE_DEVICE_DATA
  PROCEDURE :: SET_STATUS => ${ftn}$_GANG_${type}$_SET_STATUS
END TYPE ${ftn}$_GANG_${type}$

PUBLIC :: ${ftn}$_GANG_${type}$

#:endfor

CONTAINS

  SUBROUTINE ${ftn}$_GANG_WRAPPER_INIT(SELF, DATA, PERSISTENT, LBOUNDS)
    CLASS(${ftn}$_GANG_WRAPPER) :: SELF
    ${ft.type}$, TARGET, INTENT(IN) :: DATA(${ft.shape}$)
    LOGICAL, INTENT(IN), OPTIONAL :: PERSISTENT
    INTEGER(KIND=JPIM), INTENT(IN), OPTIONAL :: LBOUNDS(${ft.rank}$)
    LOGICAL :: LLPERSISTENT
    INTEGER (KIND=JPIM) :: IFLR, JFLD, NFLD
    INTEGER (KIND=JPIM) :: LLBOUNDS (${ft.rank}$)

  
    CALL SELF%${ftn}$_WRAPPER%INIT (DATA=DATA, PERSISTENT=PERSISTENT, LBOUNDS=LBOUNDS)

    LLBOUNDS = 1
    IF (PRESENT (LBOUNDS)) LLBOUNDS = LBOUNDS

    IFLR = ${ft.rank}$-1
    NFLD = SIZE (DATA, IFLR)

    LLBOUNDS(IFLR) = LLBOUNDS (IFLR+1)
    
#:set ar = ', '.join ([':'] * (ft.rank-2))

  END SUBROUTINE ${ftn}$_GANG_WRAPPER_INIT

  SUBROUTINE ${ftn}$_GANG_OWNER_INIT(SELF, LBOUNDS, UBOUNDS, PERSISTENT, DELAYED, INIT_VALUE)
    CLASS(${ftn}$_GANG_OWNER) :: SELF
    INTEGER(KIND=JPIM), INTENT(IN), OPTIONAL :: LBOUNDS(${ft.rank}$)
    INTEGER(KIND=JPIM), INTENT(IN) :: UBOUNDS(${ft.rank}$)
    LOGICAL, INTENT(IN), OPTIONAL :: PERSISTENT
    LOGICAL, OPTIONAL,  INTENT(IN) :: DELAYED
    ${ft.type}$, OPTIONAL, INTENT(IN) :: INIT_VALUE
    LOGICAL :: LLPERSISTENT
    INTEGER (KIND=JPIM) :: IFLR, JFLD, NFLD
    INTEGER (KIND=JPIM) :: LLBOUNDS (${ft.rank}$)

    CALL SELF%${ftn}$_OWNER%INIT (PERSISTENT=PERSISTENT, LBOUNDS=LBOUNDS, UBOUNDS=UBOUNDS, DELAYED=.FALSE., INIT_VALUE=INIT_VALUE)

    LLBOUNDS = 1
    IF (PRESENT (LBOUNDS)) LLBOUNDS = LBOUNDS

    IFLR = ${ft.rank}$-1
    NFLD = UBOUNDS (IFLR)-LLBOUNDS (IFLR)+1

    LLBOUNDS(IFLR) = LLBOUNDS (IFLR+1)

  END SUBROUTINE ${ftn}$_GANG_OWNER_INIT

#:for type in ['WRAPPER', 'OWNER']
  SUBROUTINE ${ftn}$_GANG_${type}$_FINAL(SELF)
    CLASS(${ftn}$_GANG_${type}$) :: SELF
    ${ft.type}$, POINTER :: PTR(${ft.shape}$)
    INTEGER (KIND=JPIM) :: JFLD

    CALL SELF%${ftn}$_${type}$%FINAL ()

  END SUBROUTINE ${ftn}$_GANG_${type}$_FINAL

  SUBROUTINE ${ftn}$_GANG_${type}$_DELETE_DEVICE_DATA(SELF)
    ! Delete the copy of this field on GPU device
    CLASS(${ftn}$_GANG_${type}$) :: SELF

    INTEGER (KIND=JPIM) :: JFLD

  END SUBROUTINE ${ftn}$_GANG_${type}$_DELETE_DEVICE_DATA

  SUBROUTINE ${ftn}$_GANG_${type}$_CREATE_DEVICE_DATA (SELF)
    CLASS(${ftn}$_GANG_${type}$) :: SELF
    INTEGER (KIND=JPIM) :: JFLD

    CALL SELF%${ftn}$_${type}$%CREATE_DEVICE_DATA ()

  END SUBROUTINE

  SUBROUTINE ${ftn}$_GANG_${type}$_SET_STATUS (SELF, KSTATUS)
    CLASS(${ftn}$_GANG_${type}$) :: SELF
    INTEGER (KIND=JPIM), INTENT (IN) :: KSTATUS

    INTEGER (KIND=JPIM) :: JFLD

WRITE (0, *) __FILE__, ':', __LINE__, " SET_STATUS = ", KSTATUS

    CALL SELF%${ftn}$_${type}$%SET_STATUS (KSTATUS)

  END SUBROUTINE

#:endfor

#:endif

END MODULE FIELD_${RANK}$${SUFF}$_GANG_MODULE
